{
    // Place your mfe-customer-work workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix,
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    //   "scope": "javascript,typescript",
    //   "prefix": "log",
    //   "body": [
    //     "console.log('$1');",
    //     "$2"
    //   ],
    //   "description": "Log output to console"
    // }
    "[MFE] React component": {
      "scope": "typescript,typescriptreact",
      "prefix": "rfc",
      "body": [
        "import { FC } from 'react'",
        "",
        "import styles from './${1:ComponentName}.module.scss'",
        "",
        "interface ${1:ComponentName}Props {",
        "}",
        "",
        "const ${1:ComponentName}: FC<${1:ComponentName}Props> = (props: ${1:ComponentName}Props) => {",
        "",
        "  return (",
        "    <div className={styles['wrap']}>",
        "    </div>",
        "  )",
        "}",
        "",
        "export default ${1:ComponentName}",
        ""
      ],
      "description": "Create a react functional component"
    },
    "[MFE] export comp": {
      "scope": "typescript,typescriptreact",
      "prefix": "exp",
      "body": [
        "export { default as ${1:ComponentName} } from './${1:ComponentName}'",
        ""
      ],
      "description": "Export module"
    },
      "[MFE] use state": {
          "scope": "typescript,typescriptreact",
          "prefix": "usest",
          "body": [
              "const [$1, set$2]: [$3, Dispatch<SetStateAction<$3>>] = useState($4)$0",
          ]
      }
  }
